
@model QOS.Areas.Report.Models.Form8TPViewModel
@{
	ViewData["Title"] = "Thông số TP";
	Layout = "_MenuReport";
}
<style>
	table {
    width: 100%;
    border-collapse: collapse;
	
    table-layout: fixed; /* ép cột tự giãn đều */
}

th, td {
    word-wrap: break-word; /* xuống dòng khi quá dài */
    white-space: normal;
    text-align: left;
    padding: 8px;
}
</style>
<partial name="_AlertMessage" />
<div class="continer my-3">
	<form id="SearchForm" asp-area="Report" asp-action="RP_Form8" asp-controller="Form8TP" method="get" class="">
    	<div class="row align-items-center mb-3">
        	
			<!-- Bên trái -->
			<div class="col-md-5 d-flex flex-wrap gap-2">
				<h3 class="text-primary fw-bold ms-3">BÁO CÁO THÔNG SỐ THÀNH PHẨM</h3>
			</div>

			<!-- Bên phải -->
			<div class="col-md-7 d-flex  align-items-center gap-2 mb-0">
				<select class="form-control " id="Unit" name="Unit" asp-for="Unit"
					asp-items="@(new SelectList(Model.Unit_List, "Unit", "Unit", Model.Unit))">
					<option value="ALL">-- Chọn Unit --</option>
				</select>

				<input type="date" id="dateFrom" name="dateFrom" class="form-control"
					value="@Model.DateFrom.ToString("yyyy-MM-dd")" />
				<input type="date" id="dateEnd" name="dateEnd" class="form-control"
					value="@Model.DateEnd.ToString("yyyy-MM-dd")" />


				<button class="btn btn-warning" id="Check" name="Check" type="submit"> Check</button>
				
				<button type="button" class="btn btn-primary" id="ExportExcel"
					name="ExportExcel">Tải&nbsp;Excel</button>
				
			</div>
		</div>

				
		<!-- Phân trang -->
		@{
			var totalRows = 0;
			
			var pageNo = Model.Page_No > 0 ? Model.Page_No : 1;
			foreach (var t_row in Model.ReportData)
			{
				if (t_row["Total_Rows"] != DBNull.Value)
					totalRows = Convert.ToInt32(t_row["Total_Rows"]);
			}
			var rowsPerPage = Model.Row_Page > 0 ? Model.Row_Page : 10;
			var totalPages = (int)Math.Ceiling((double)totalRows / rowsPerPage);
			if(pageNo > totalPages && totalPages > 0)
			{
				pageNo = totalPages;
			}
			

			<div class="table-responsive">
				<table class="table table-borderless align-middle">
					<tr>
						<td class="text-start fw-bold">Total rows: @totalRows</td>
						<td style="width:30px; text-align:center;">
							<i class="fa-solid fa-angles-left pagination-icon" data-action="first"
								title="First Page" style="cursor:pointer;"></i>
						</td>
						<td style="width:30px; text-align:center;">
							<i class="fa-solid fa-angle-left pagination-icon" data-action="prev"
								title="Previous Page" style="cursor:pointer;"></i>
						</td>
						<td style="text-align:center; width:150px; font-weight:bold;">
							Page <span id="currentPage">@pageNo </span> / @totalPages
						</td>
						<td style="width:30px; text-align:center;">
							<i class="fa-solid fa-angle-right pagination-icon" data-action="next"
								title="Next Page" style="cursor:pointer;"></i>
						</td>
						<td style="width:30px; text-align:center;">
							<i class="fa-solid fa-angles-right pagination-icon" data-action="last"
								title="Last Page" style="cursor:pointer;"></i>
						</td>
						<td style="width:150px; text-align:right;">Rows / page:</td>
						<td style="width:80px;">
							<input type="number" id="Row_Page" name="Row_Page"
								value="@Model.Row_Page" min="1" 
								style="width:100%; font-size:16px; text-align:center;" />
						</td>
						<td style="display:none;">
							<input type="hidden" id="Page_No" name="Page_No" value="@pageNo" />
						</td>
						<td style="display:none;">
							<input type="hidden" id="Total_Rows" name="Total_Rows" value="@totalRows" />
						</td>
					</tr>
				</table>
			</div>
		}
	</form>
    
</div>
<div id="TableContainer" >
    <table class="table table-bordered table-hover table-striped align-middle text-center">
        <thead class="table-dark align-middle">
            <th>No</th>
            <th>Ngày</th>
            <th>Line</th>
            <th>Style</th>
            <th>MO</th>
            <th>Item</th>
            <th>Công đoạn</th>
            <th>Màu</th>
            <th>Rập</th>
            <th>Bàn cắt</th>
			<th style="width:300px;">Size</th>
            <th>Fault / Qty</th>
			<th>OQL</th>
			<th>Người kiểm</th>
			<th>Trạng thái</th>
			<th>Chi tiết</th>
			<th>Hành động</th>
        </thead>
        <tbody>
			@if(Model.ReportData != null && Model.ReportData.Any())
			{
				foreach ( var row in Model.ReportData)
				{
					var OQL = 0;
					var count_fault = Convert.ToInt32(@row["Fault"]);
					var total_Qty = Convert.ToInt32(@row["Qty"]);
					if(total_Qty == 0)
					{
						OQL = 0;
					}else{
						OQL = (count_fault / total_Qty)*100 ;
					}
					<tr>
						<td>@row["ID_L"]</td>
						<td>@row["WorkDate"]</td>
						<td>@row["Line"]</td>
						<td>@row["StyleCode"]</td>
						<td>@row["MO"]</td>
						<td>@row["Item"]</td>
						<td>@row["WorkstageName"]</td>
						<td>@row["ColorCode"]</td>
						<td>@row["PatternCode"]</td>
						<td>@row["TableCode"]</td>
						<td class="text-start">@row["SizeList"]</td>
						<td>@count_fault / @total_Qty</td>
						<td>@OQL %</td>
						<td>@row["UpdatedBy"]</td>
						@* <td>@row["Status_Flag"]</td> *@
						<td>
							@{
								var status = row["Status_Flag"]?.ToString();
								var badgeClass = status == "Pass" ? "badge bg-success" : "badge bg-warning";
								var statusText = status == "Pass" ? "Pass" : "Fail";
							}
							<span class="@badgeClass">@statusText</span>
						</td>
						
						<td onclick="Row_Click('@Base64Helper.Encode($"{row["WorkDate"]}#_#{row["FactoryID"]}#_#{row["TypeName"]}#_#{row["WorkstageName"]}#_#{row["Line"]}#_#{row["StyleCode"]}#_#{row["MO"]}#_#{row["ColorCode"]}#_#{row["Item"]}#_#{row["PatternCode"]}#_#{row["BatchCode"]}#_#{row["TableCode"]}")') "><i class="fa-solid fa-eye"></i></td>
						<td><span class="@badgeClass">Print</span></td>
						

					</tr>
				}
				
			}else
			{
				<tr>
					<td colspan="16" class="text-center">Không có dữ liệu</td>
				</tr>
			}
		</tbody>
	</table>
</div>


<script>	
	// Pagination functionality
	document.addEventListener('DOMContentLoaded', function() {
		const paginationIcons = document.querySelectorAll('.pagination-icon');
		const form = document.getElementById('SearchForm');
		const pageNoInput = document.getElementById('Page_No');
		const rowPageInput = document.getElementById('Row_Page');
		const totalRowsInput = document.getElementById('Total_Rows');
		
		paginationIcons.forEach(icon => {
			icon.addEventListener('click', function() {
				const action = this.getAttribute('data-action');
				let currentPage = parseInt(pageNoInput.value) || 1;
				const rowsPerPage = parseInt(rowPageInput.value) || 10;
				const totalRows = parseInt(totalRowsInput.value) || 0;
				const totalPages = Math.ceil(totalRows / rowsPerPage);
				
				let newPage = currentPage;
				
				switch(action) {
					case 'first':
						newPage = 1;
						break;
					case 'prev':
						newPage = Math.max(1, currentPage - 1);
						break;
					case 'next':
						newPage = Math.min(totalPages, currentPage + 1);
						break;
					case 'last':
						newPage = Math.max(1, totalPages);
						break;
				}
				
				// Chỉ submit nếu trang thay đổi
				if(newPage !== currentPage) {
					pageNoInput.value = newPage;
					form.submit();
				}
			});
		});

		// Export Excel functionality
		document.getElementById('ExportExcel').addEventListener('click', function() {
			const formData = new FormData(form);
			const params = new URLSearchParams(formData);
			
			window.location.href = '/Report/Form8TP/ExportExcel?' + params.toString();
		});

		// Change rows per page
		// Change rows per page
		rowPageInput.addEventListener('change', function() {
			const newValue = parseInt(this.value);
			if(newValue > 0) {
				pageNoInput.value = 1; // Reset to first page
				console.log('Row_Page changed to:', newValue);
				console.log('Page_No set to:', pageNoInput.value);
				form.submit();
			} else {
				alert('Số dòng phải lớn hơn 0');
				this.value = 10; // Set default
			}
		});
		
		// Prevent form submit if Page_No is invalid
		form.addEventListener('submit', function(e) {
			const pageNo = parseInt(pageNoInput.value);
			if(!pageNo || pageNo < 1) {
				console.warn('Invalid Page_No detected:', pageNo, '- Setting to 1');
				pageNoInput.value = 1;
			}
			console.log('Form submitting with Page_No:', pageNoInput.value, 'Row_Page:', rowPageInput.value);
		});

	});

	// View detail function
	function viewDetail(id) {
		window.location.href = '/Report/Form8TP/Detail/' + id;
	}

	// Edit record function
	function editRecord(id) {
		window.location.href = '/Report/Form8TP/Edit/' + id;
	}
</script>