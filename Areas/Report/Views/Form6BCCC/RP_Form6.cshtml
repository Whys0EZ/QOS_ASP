@model QOS.Areas.Report.Models.RP_Form6ViewModel
@using System.Text.Json
@{
    ViewData["Title"] = "Báo Cáo Cuối Chuyền";
    Layout = "_MenuReport";
}

<partial name="_AlertMessage" />
<div class="w-100 px-2 my-3">
    <div class="row align-items-center g-2">
        <!-- Tiêu đề -->
        <div class="col-12 col-md-6">
            <h3 class="text-primary fw-bold mb-0 text-center text-md-start">
                QOS - BÁO CÁO CHẤT LƯỢNG CUỐI CHUYỀN
            </h3>
        </div>

        <!-- Form tìm kiếm -->
        <div class="col-12 col-md-6 justify-content-md-end">
            <form id="SearchForm" asp-area="Report" asp-action="RP_Form6"
                  asp-controller="Form6BCCC" method="get"
                  class="row g-2 justify-content-end align-items-center ">

                <!-- Unit -->
                <div class="col-12 col-sm-6 col-md-2 ">
                    <select class="form-select" id="Unit" name="Unit" asp-for="Unit" onChange="Submit();"
                        asp-items="@(new SelectList(Model.Unit_List, "Unit", "Unit", Model.Unit))">
                        <option value="ALL">--ALL--</option>
                    </select>
                </div>

                <!-- Ngày từ -->
                <div class="col-6 col-md-3">
                    <input type="date" id="dateFrom" name="dateFrom" class="form-control"
                        value="@Model.DateFrom.ToString("yyyy-MM-dd")" />
                </div>

                <!-- Ngày đến -->
                <div class="col-6 col-md-3">
                    <input type="date" id="dateEnd" name="dateEnd" class="form-control"
                        value="@Model.DateEnd.ToString("yyyy-MM-dd")" />
                </div>

                <!-- Buttons -->
                <div class="col-12 col-md-4 d-flex flex-wrap gap-2 justify-content-end">
                    <button class="btn btn-warning flex-fill" type="submit">Check</button>
                    
                    <button type="button" class="btn btn-primary flex-fill" id="ExportExcel">Tải&nbsp;Excel</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Legend -->
    <div class="row mt-3">
        <div class="col-12">
            <div class="d-flex flex-wrap align-items-center gap-3 mb-3">
                <div class="d-flex align-items-center">
                    <span class="badge bg-secondary rounded-circle me-2" style="width: 15px; height: 15px;">&nbsp;</span>
                    <small>Chưa kiểm tra</small>
                </div>
                <div class="d-flex align-items-center">
                    <span class="badge bg-success rounded-circle me-2" style="width: 15px; height: 15px;">&nbsp;</span>
                    <small>Không có lỗi</small>
                </div>
                <div class="d-flex align-items-center">
                    <span class="badge bg-warning rounded-circle me-2" style="width: 15px; height: 15px;">&nbsp;</span>
                    <small>Lỗi nhẹ</small>
                </div>
                <div class="d-flex align-items-center">
                    <span class="badge bg-danger rounded-circle me-2" style="width: 15px; height: 15px;">&nbsp;</span>
                    <small>Lỗi nặng</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Kết quả -->
    <div class="row">
        <div class="col-12" id="TableContainer">
        <!-- Code here -->
        @if (Model.ReportData != null && Model.ReportData.Any())
        {
            var dataPoint = new List<string>();
            var firstRow = Model.ReportData.First();
            var columns = firstRow.Keys.Where(k => k != "Unit" && k != "OQL_TT" && k != "OQL_Target" && k != "CL").ToList();

            <table class="table-fixed table table-bordered table-hover align-middle" width="100%">
                <thead class="table-primary">
                    <tr>
                        <td style="width:50px;">Unit</td>
                        @foreach (var col in columns)
                        {
                            <td style="width:50px;">@col</td>
                        }
                    </tr>
                </thead>
                <tbody>
                @foreach (var row in Model.ReportData)
                {
                    var unit = row["Unit"]?.ToString();
                    var oqlTT = row["OQL_TT"] != null ? Convert.ToDouble(row["OQL_TT"]) : 0;

                    <tr>
                        <td style="text-align:center;">
                            <h3><a href="#" onclick="UnitDetail_Click('@unit');">@unit</a></h3>
                            <b><small>@((oqlTT * 100).ToString("0.00")) %</small></b>
                        </td>

                        @foreach (var col in columns)
                        {
                            var raw = row[col]?.ToString() ?? "";
                            var tmp = raw.Split('_');
                            var circleClass = tmp[0] switch
                            {
                                "red" => "Circles_Red",
                                "green" => "Circles_Green",
                                "yellow" => "Circles_Yellow",
                                _ => "Circles_None"
                            };
                            

                            <td style="text-align:center;">
                                @if (tmp.Length > 1 && double.TryParse(tmp[1], out var val) && val > 0)
                                {
                                    <div onclick="Show_History_RP('@tmp[3]', '@Model.DateFrom.ToString("yyyy-MM-dd")', '@Model.DateEnd.ToString("yyyy-MM-dd")')" class="@circleClass"></div>
                                    <br />@($"{val * 100:0.00}")<small>%</small>
                                }
                                else
                                {
                                    <div class="@circleClass"></div>
                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        }
        else
        {
            <p>Không có dữ liệu.</p>
        }

        </div>
    </div>
</div>

<!-- CHART -->

<div class="col-md-12">
    <canvas id="chartOQL" height="100"></canvas>
</div>
<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-body text-center py-4">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <div class="fw-bold">Đang tải dữ liệu...</div>
                <small class="text-muted">Vui lòng chờ trong giây lát</small>
            </div>
        </div>
    </div>
</div>

<!-- History Modal -->
@* modal-fullscreen *@
<div class="modal fade" id="historyModal" tabindex="-1">
    <div class="modal-dialog modal-fullscreen ">
        <div class="modal-content">
            <div class="modal-header">
                <h2 style="text-align: center; text-transform: uppercase;" class="modal-title">Lịch sử kiểm tra chất lượng cuối chuyền  - <span id="lineCodeTitle"></span></h2>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body " id="historyContent">
                <!-- History content will be loaded here -->
                
            </div>
        </div>
    </div>
</div>


<script>
    // Lấy dữ liệu từ Model (được serialize sang JSON)
    var dataPointsREG = @Html.Raw(JsonSerializer.Serialize(Model.DataPointsREG));
    var dataPointsUnitTarget = @Html.Raw(JsonSerializer.Serialize(Model.DataPointsUnitTarget));

    console.log("Data REG:", dataPointsREG);
    console.log("Data Target:", dataPointsUnitTarget);

    // Tách label và value
    var labels = dataPointsREG.map(p => p.Label);
    var valuesREG = dataPointsREG.map(p => p.Y);
    var valuesTarget = dataPointsUnitTarget.map(p => p.Y);

    // Vẽ biểu đồ
    var ctx = document.getElementById('chartOQL').getContext('2d');
    var chart = new Chart(ctx, {
        type: 'line', // Có thể đổi sang 'line'
        data: {
            labels: labels,
            datasets: [
                {
                    label: 'OQL By Unit (%)',
                    data: valuesREG,
                    backgroundColor: 'rgba(54, 162, 235, 0.7)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                },
                {
                    label: 'OQL Target (%)',
                    data: valuesTarget,
                    backgroundColor: 'rgba(255, 99, 132, 0.7)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }
            ]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function(value) {
                            return value + "%";
                        }
                    }
                }
            },
            plugins: {
                datalabels: {
                    color: '#000',
                    anchor: 'end',
                    align: 'end',
                    formatter: function (value) {
                        return value.toFixed(2) + "%";
                    },
                    font: {
                        weight: 'bold'
                    }
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return context.dataset.label + ": " + context.parsed.y.toFixed(2) + "%";
                        }
                    }
                }
            }
        },
        plugins: [ChartDataLabels] // bật plugin datalabels
    });

    var dataPointsREG = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.DataPointsREG));
    var dataPointsUnitTarget = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.DataPointsUnitTarget));

    console.log(dataPointsREG);
    console.log(dataPointsUnitTarget);

    
    function UnitDetail_Click(unit) {
        var loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
        loadingModal.show();
        var dateFrom = document.getElementById('dateFrom').value;
        var dateEnd = document.getElementById('dateEnd').value;

        var url = '@Url.Action("RP_Form6", "Form6BCCC", new { area = "Report" })' + '?Unit=' + encodeURIComponent(unit) + '&dateFrom=' + encodeURIComponent(dateFrom) + '&dateEnd=' + encodeURIComponent(dateEnd);
        window.location.href = url;
    }

    function Submit()
    {
        // Show loading
        var loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
        loadingModal.show();
        document.getElementById("SearchForm").submit();
        
    }
    // Show loading on form submit
    document.getElementById('SearchForm').addEventListener('submit', function() {
        var loadingModal = new bootstrap.Modal(document.getElementById('loadingModal'));
        loadingModal.show();
    });

    function Show_History_RP(lineCode, dateF, dateT) {
        document.getElementById('lineCodeTitle').textContent = lineCode;
        
        // You can implement AJAX call here to load detailed history
        var historyContent = document.getElementById('historyContent');
        historyContent.innerHTML = `
            <div class="text-center py-3">
                <div class="spinner-border text-primary mb-2" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <div>Đang tải lịch sử cho line ${lineCode}...</div>
                <small class="text-muted">Từ ${dateF} đến ${dateT}</small>
            </div>
        `;
        
        var historyModal = new bootstrap.Modal(document.getElementById('historyModal'));
        historyModal.show();
        $.ajax({
            url: '/Report/Form6BCCC/GetLineHistory',
            type: 'GET',
            data: {
                lineCode: lineCode,
                dateFrom: dateF || new Date().toISOString().slice(0, 10),
                dateEnd: dateT   || new Date().toISOString().slice(0, 10)
            },
            success: function (html) {
                $("#historyContent").html(html);
            },
            error: function () {
                $("#historyContent").html('<div class="alert alert-danger">Lỗi tải dữ liệu</div>');
            }
        });
    }

</script>
